name: CI

on:
  push:
    branches: [ master ]
    tags:
      - "v*"
  pull_request:
    branches:
    - master

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} and Airflow ${{ matrix.airflow-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
        airflow-version: ['1.10.15', '2.2.2', '2.4.2']
        exclude:
          - python-version: '3.10'
            airflow-version: '1.10.15'
          - python-version: '3.10'
            airflow-version: '2.2.2'
        include:
          - airflow-version: '1.10.15'
            constraints: 'constraints-3.8.txt'
            install: 'apache-airflow[amazon]==1.10.15'

    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v1
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            pypi.org:443

      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.2.0b1

      - name: Install airflow-dbt-python with Poetry
        run: poetry install -E postgres --with dev

      - name: Style guide enforcement with flake8
        run: poetry run flake8 .

      - name: Static type checking with mypy
        run: poetry run mypy .

      - name: Code formatting with black
        run: poetry run black --check .

      - name: Install Airflow with constraints
        if: ${{ matrix.constraints }}
        run: |
          wget https://raw.githubusercontent.com/apache/airflow/constraints-${{ matrix.airflow-version }}/${{ matrix.constraints }} -O constraints.txt
          poetry run pip install ${{ matrix.install }} -c constraints.txt
          poetry run airflow db init

      - name: Install Airflow with constraints
        if: matrix.constraints == ''
        run: |
          wget https://raw.githubusercontent.com/apache/airflow/constraints-${{ matrix.airflow-version }}/constraints-${{ matrix.python-version }}.txt -O constraints.txt
          poetry run pip install apache-airflow==${{ matrix.airflow-version }} apache-airflow-providers-amazon -c constraints.txt
          poetry run airflow db init

      - name: Run tests with pytest
        run: poetry run pytest -v --cov=./airflow_dbt_python --cov-report=xml:./coverage.xml --cov-report term-missing tests/

      - name: Upload code coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: "coverage.*"
          if-no-files-found: ignore

  coverage:
    name: Combine and check coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v1
        with:
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443

      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - run: python -m pip install --upgrade coverage[toml]

      - name: Download coverage data.
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: Combine coverage & fail if it's <100%.
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          # Report and write to summary.
          python -m coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY
          # Report again and fail if under 100%.
          python -m coverage report --fail-under=100

      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: html-report
          path: htmlcov
