[project]
name = "airflow-dbt-python"
version = "3.0.0"
description = "A collection of Airflow operators, hooks, and utilities to execute dbt commands"
authors = [{ name = "Tomás Farías Santana", email = "tomas@tomasfarias.dev" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9,<3.13"
classifiers = [
    "Development Status :: 5 - Production/Stable",

    "Intended Audience :: Developers",

    "License :: OSI Approved :: MIT License",

    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "apache-airflow>=2.8",
    "contextlib-chdir==1.0.2;python_version<'3.11'",
    "dbt-core>=1.8.0,<2.0.0",
]

[project.url]
repository = "https://github.com/tomasfarias/airflow-dbt-python"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[project.optional-dependencies]
airflow-providers = [
    "apache-airflow-providers-amazon>=3.0.0",
    "apache-airflow-providers-google>=11.0.0",
    "apache-airflow-providers-ssh>=3.0.0",
]
adapters = [
    "dbt-bigquery>=1.8.0,<2.0.0",
    "dbt-redshift>=1.8.0,<2.0.0",
    "dbt-postgres>=1.8.0,<2.0.0",
    "dbt-snowflake>=1.8.0,<2.0.0",
    "dbt-spark[all]>=1.8.0,<2.0.0",
]
bigquery = [
    "dbt-bigquery>=1.8.0,<2.0.0",
]
gcs = [
    "apache-airflow-providers-google>=11.0.0",
]
git = [
    "apache-airflow-providers-ssh>=3.0.0",
    "dulwich>=0.21",
]
postgres = [
    "dbt-postgres>=1.8.0,<2.0.0",
]
redshift = [
    "dbt-redshift>=1.8.0,<2.0.0",
]
s3 = [
    "apache-airflow-providers-amazon>=3.0.0",
]
snowflake = [
    "dbt-snowflake>=1.8.0,<2.0.0",
]
spark = [
    "dbt-spark>=1.8.0,<2.0.0",
]

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
apache-airflow-providers-amazon = ">=3.0.0"
apache-airflow-providers-google = ">=11.0.0"
apache-airflow-providers-ssh = ">=3.0.0"
black = ">=22"
boto3-stubs = { extras = ["s3"], version = ">=1.26.8" }
coverage = { extras = ["toml"], version = ">=7.2" }
# docutils 0.21 causes an error with poetry (https://github.com/python-poetry/poetry/issues/9293)
docutils = "!=0.21"
dulwich = ">=0.21,!=0.21.6"
moto = ">=4.0.3"
mypy = ">=1"
freezegun = ">=1.1.0"
pre-commit = ">=2.18"
pytest = ">=7.2"
pytest-postgresql = ">=5"
ruff = ">=0.0.254"
types-freezegun = ">=1.1.6"
types-PyYAML = ">=6.0.7"
pytest-mock = "^3.14.0"
mock-gcp = ">=0.2.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "7.4.7"
sphinx-rtd-theme = "3.0.2"
sphinx-copybutton = "0.5.2"
attrs = ">=22"
zipp = ">=3.19.1"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
source = ["airflow_dbt_python"]

[tool.coverage.paths]
source = [
    "airflow_dbt_python",
    "/home/runner/*/airflow-dbt-python/airflow_dbt_python"
]

[tool.mypy]
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = false
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
addopts = "--doctest-modules"
postgresql_user = "test"
postgresql_password = "test" # pragma: allowlist secret
postgresql_dbname = "test"
python_classes = "!TestStatus !TestTaskConfig"
filterwarnings = [
    # Warnings raised by dbt dependencies
    'ignore: write_gpickle is deprecated:DeprecationWarning',
    "ignore: 'soft_unicode' has been renamed to 'soft_str':DeprecationWarning"
]
markers = [
    "integration: mark test as an integration test"
]

[tool.ruff]
line-length = 88
target-version = "py39"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "airflow",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "webserver_config.py",
]

[tool.ruff.lint]
select = ["E", "D", "F", "I"]
ignore = ["D107"]

[tool.ruff.lint.isort]
known-third-party = [
  "airflow",
  "dbt",
  "yaml",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "E402",
    "F401",
]
"tests/*" = [
    "F401",
    "E402",
]
"docs/*" = ["E402"]

[tool.ruff.lint.pydocstyle]
convention = "google"
