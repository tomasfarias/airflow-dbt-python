[tool.poetry]
name = "airflow-dbt-python"
version = "0.15.3"
description = "A dbt operator and hook for Airflow"
authors = ["Tomás Farías Santana <tomas@tomasfarias.dev>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/tomasfarias/airflow-dbt-python"
classifiers = [
    "Development Status :: 4 - Beta",

    "Intended Audience :: Developers",

    "License :: OSI Approved :: MIT License",

    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.7.2, <3.11.0"

apache-airflow = { version = ">=2.0", optional = true }
apache-airflow-providers-amazon = { version = ">=3.0.0", optional = true }

dbt-core = ">=1.0.0"
dbt-postgres = { version = ">=1.0.0", optional = true }
dbt-redshift = { version = ">=1.0.0", optional = true }
dbt-snowflake = { version = ">=1.0.0", optional = true }
dbt-bigquery = { version = ">=1.0.0", optional = true }
dbt-spark = { version = ">=1.0.0", optional = true }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^22.3"
boto3-stubs = { extras = ["s3"], version = "^1.26.8" }
coverage = { extras = ["toml"], version = "^6.5" }
moto = "^4.0.3"
mypy = "0.990"
flake8 = "<=4.0"
flake8-docstrings = "^1.6.0"
freezegun = "^1.1.0"
isort = "^5.10.1"
pre-commit = "^2.18"
psycopg2-binary = "^2.8.6"
pytest = "^6.2.4"
pytest-cov = "^4.0"
pytest-postgresql = "^3.1.1"
types-freezegun = "^1.1.6"
types-PyYAML = "^6.0.7"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^5.3"
sphinx-rtd-theme = "^1.1"
sphinx-copybutton = "^0.5"

[tool.poetry.extras]
airflow = ["apache-airflow"]
airflow-providers = ["apache-airflow-providers-amazon"]
adapters = ["dbt-bigquery", "dbt-redshift", "dbt-postgres", "dbt-snowflake", "dbt-spark"]
bigquery = ["dbt-bigquery"]
docs = ["Sphinx", "sphinx-rtd-theme", "sphinx-copybutton"]
postgres = ["dbt-postgres"]
redshift = ["dbt-redshift"]
snowflake = ["dbt-snowflake"]
spark = ["dbt-spark"]

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
source = ["airflow_dbt_python"]

[tool.coverage.paths]
source = [
    "airflow_dbt_python",
    "/home/runner/*/airflow-dbt-python/airflow_dbt_python"
]

[tool.pytest.ini_options]
postgresql_user = "test"
postgresql_password = "test" # pragma: allowlist secret
postgresql_dbname = "test"
python_classes = "!TestStatus !TestTaskConfig"
filterwarnings = [
    # Warnings raised by dbt dependencies
    'ignore: write_gpickle is deprecated:DeprecationWarning',
    "ignore: 'soft_unicode' has been renamed to 'soft_str':DeprecationWarning"
]
markers = [
    "integration: mark test as an integration test"
]


[tool.mypy]
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = false
warn_redundant_casts = true
warn_unused_configs = true
