[tool.poetry]
name = "airflow-dbt-python"
version = "0.14.5"
description = "A dbt operator and hook for Airflow"
authors = ["Tomás Farías Santana <tomas@tomasfarias.dev>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/tomasfarias/airflow-dbt-python"
classifiers = [
    "Development Status :: 4 - Beta",

    "Intended Audience :: Developers",

    "License :: OSI Approved :: MIT License",

    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.7.2, <3.11.0"

apache-airflow = { version = ">=2.0", optional = true }
apache-airflow-providers-amazon = { version = ">=3.0.0", optional = true }

dbt-core = ">=1.0.0"
dbt-postgres = { version = ">=1.0.0", optional = true }
dbt-redshift = { version = ">=1.0.0", optional = true }
dbt-snowflake = { version = ">=1.0.0", optional = true }
dbt-bigquery = { version = ">=1.0.0", optional = true }
dbt-spark = { version = ">=1.0.0", optional = true }

[tool.poetry.group.airflow-constraints]
optional = true

[tool.poetry.group.airflow-constraints.dependencies]
Authlib = "1.0.1"
Babel = "2.9.1"
Deprecated = "1.2.13"
Flask-AppBuilder = "3.4.5"
Flask-Babel = "2.0.0"
Flask-Bcrypt = "0.7.1"
Flask-Caching = "1.10.1"
Flask-JWT-Extended = "3.25.1"
Flask-Login = "0.4.1"
Flask-OpenID = "1.3.0"
Flask-SQLAlchemy = "2.5.1"
Flask-Session = "0.4.0"
Flask-WTF = "0.14.3"
Flask = "1.1.2"
HeapDict = "1.0.1"
Jinja2 = ">=2.11.3"
Mako = "1.2.0"
Markdown = "3.3.6"
MarkupSafe = "2.0.1"
PyJWT = "1.7.1"
PyYAML = "5.4.1"
Pygments = "2.11.2"
SQLAlchemy-JSONField = "1.0.0"
SQLAlchemy-Utils = "0.38.2"
SQLAlchemy = "1.3.24"
WTForms = "2.3.3"
Werkzeug = "1.0.1"
alembic = "1.7.7"
amqp = "5.1.0"
anyio = "3.5.0"
apispec = "3.3.2"
argcomplete = "1.12.3"
attrs = "20.3.0"
bcrypt = "3.2.0"
billiard = "3.6.4.0"
blinker = "1.4"
cached-property = "1.5.2"
cachelib = "0.6.0"
cachetools = "5.0.0"
cattrs = "1.10.0"
celery = "5.2.3"
certifi = "2020.12.5"
cffi = "1.15.0"
cgroupspy = "0.2.1"
charset-normalizer = "2.0.12"
click-didyoumean = "0.3.0"
click-plugins = "1.1.1"
click-repl = "0.2.0"
click = "8.1.0"
clickclick = "20.10.2"
cloudpickle = "2.0.0"
colorama = "0.4.4"
colorlog = "4.8.0"
commonmark = "0.9.1"
connexion = "2.13.0"
croniter = "1.3.4"
cryptography = ">=3.2, <4"
dask = "2022.2.0"
decorator = "5.1.1"
defusedxml = "0.7.1"
dill = "0.3.2"
distlib = "0.3.4"
distributed = "2022.2.0"
dnspython = "2.2.1"
docutils = "0.16"
email-validator = "1.1.3"
eventlet = "0.33.0"
filelock = "3.6.0"
flower = "1.0.0"
fsspec = "2022.2.0"
gevent = "21.12.0"
graphviz = "0.19.1"
greenlet = "1.1.2"
grpcio = "1.44.0"
gssapi = "1.7.3"
gunicorn = "20.1.0"
h11 = "0.12.0"
httpcore = "0.14.7"
httpx = "0.22.0"
humanize = "4.0.0"
idna = "3.3"
importlib-metadata = "4.11.3"
importlib-resources = "5.6.0"
inflection = "0.5.1"
iso8601 = "1.0.2"
itsdangerous = "1.1.0"
jsonschema = ">=3.0.0"
kombu = "5.2.4"
krb5 = "0.3.0"
kubernetes = "11.0.0"
lazy-object-proxy = "1.4.3"
ldap3 = "2.9.1"
locket = "0.2.1"
lockfile = "0.12.2"
marshmallow-enum = "1.5.1"
marshmallow-oneofschema = "3.0.1"
marshmallow-sqlalchemy = "0.26.1"
marshmallow = "3.15.0"
msgpack = "1.0.3"
nox = "2020.12.31"
numpy = "1.21.5"
oauthlib = "3.2.0"
packaging = "21.3"
pandas = "1.3.5"
partd = "1.2.0"
pendulum = "2.1.2"
platformdirs = "2.5.1"
plyvel = "1.4.0"
prison = "0.2.1"
prometheus-client = "0.13.1"
prompt-toolkit = "3.0.28"
proto-plus = "1.18.1"
protobuf = "3.19.4"
psutil = "5.9.0"
pure-sasl = "0.6.2"
py = "1.11.0"
pyasn1-modules = "0.2.8"
pyasn1 = "0.4.8"
pycparser = "2.21"
pykerberos = "1.2.4"
pyparsing = "3.0.7"
pyrsistent = "0.18.1"
pyspnego = "0.5.1"
python-daemon = "2.3.0"
python-dateutil = "2.8.2"
python-ldap = "3.4.0"
python-nvd3 = "0.15.0"
python-slugify = "4.0.1"
python3-openid = "3.2.0"
pytz = "2022.1"
pytzdata = "2020.1"
requests-kerberos = "0.14.0"
requests-oauthlib = "1.3.1"
requests = "2.27.1"
rfc3986 = "1.5.0"
rich = "12.0.1"
rsa = "4.8"
sentry-sdk = "1.5.8"
setproctitle = "1.2.2"
six = "1.16.0"
sniffio = "1.2.0"
sortedcontainers = "2.4.0"
statsd = "3.3.0"
swagger-ui-bundle = "0.0.9"
tabulate = "0.8.9"
tblib = "1.7.0"
tenacity = "8.0.1"
termcolor = "1.1.0"
text-unidecode = "1.3"
thrift-sasl = "0.4.3"
thrift = "0.15.0"
toolz = "0.11.2"
tornado = "6.1"
typing_extensions = ">=3.7.4, <3.11"
unicodecsv = "0.14.1"
urllib3 = "1.26.9"
vine = "5.0.0"
virtualenv = "20.14.0"
wcwidth = "0.2.5"
websocket-client = "1.3.2"
wrapt = "1.14.0"
zict = "2.1.0"
zipp = "3.7.0"
"zope.event" = "4.5.0"
"zope.interface" = "5.4.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^22.3"
boto3-stubs = { extras = ["s3"], version = "^1.20.52" }
moto = "^2.2.2"
mypy = "^0.942"
flake8 = "^3.8.3"
flake8-docstrings = "^1.6.0"
freezegun = "^1.1.0"
isort = "^5.10.1"
pre-commit = "^2.18.1"
psycopg2-binary = "^2.8.6"
pytest = "^6.2.4"
pytest-cov = "^3.0.0"
pytest-postgresql = "^3.1.1"
types-freezegun = "^1.1.6"
types-PyYAML = "^6.0.7"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "4.5.0"
sphinx-rtd-theme = "1.0.0"
sphinxcontrib-napoleon = "0.7"
sphinx-copybutton = "0.5"

[tool.poetry.extras]
airflow = ["apache-airflow"]
airflow-providers = ["apache-airflow-providers-amazon"]
adapters = ["dbt-bigquery", "dbt-redshift", "dbt-postgres", "dbt-snowflake", "dbt-spark"]
bigquery = ["dbt-bigquery"]
postgres = ["dbt-postgres"]
redshift = ["dbt-redshift"]
snowflake = ["dbt-snowflake"]
spark = ["dbt-spark"]

[build-system]
requires = ["poetry-core>=1.1.0a7"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
postgresql_user = "test"
postgresql_password = "test" # pragma: allowlist secret
postgresql_dbname = "test"
python_classes = "!TestStatus !TestTaskConfig"
filterwarnings = [
    # Warnings raised by dbt dependencies
    'ignore: write_gpickle is deprecated:DeprecationWarning',
    "ignore: 'soft_unicode' has been renamed to 'soft_str':DeprecationWarning"
]
markers = [
    "integration: mark test as an integration test"
]


[tool.mypy]
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = false
warn_redundant_casts = true
warn_unused_configs = true
