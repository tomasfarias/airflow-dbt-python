[tool.poetry]
name = "airflow-dbt-python"
version = "2.0.1"
description = "A collection of Airflow operators, hooks, and utilities to execute dbt commands"
authors = ["Tomás Farías Santana <tomas@tomasfarias.dev>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/tomasfarias/airflow-dbt-python"
classifiers = [
    "Development Status :: 5 - Production/Stable",

    "Intended Audience :: Developers",

    "License :: OSI Approved :: MIT License",

    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"  # Airflow providers require this upper boundary

apache-airflow = { version = ">=2.2" }
apache-airflow-providers-amazon = { version = ">=3.0.0", optional = true }
apache-airflow-providers-ssh = { version = ">=3.0.0", optional = true }
connexion = { version = "<3.0" }  # https://github.com/apache/airflow/issues/35217
dulwich = { version = ">=0.21", optional = true }
contextlib-chdir = { version = "==1.0.2", python = "<3.11" }

dbt-core = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-bigquery = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-postgres = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-redshift = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-snowflake = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-spark = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
apache-airflow-providers-amazon = ">=3.0.0"
apache-airflow-providers-ssh = ">=3.0.0"
black = ">=22"
boto3-stubs = { extras = ["s3"], version = ">=1.26.8" }
coverage = { extras = ["toml"], version = ">=7.2" }
dbt-postgres = ">=1.0.0,<1.8.0"
dulwich = ">=0.21,!=0.21.6"
moto = ">=4.0.3"
mypy = ">=1"
freezegun = ">=1.1.0"
pre-commit = ">=2.18"
psycopg = ">=3.0"
pytest = ">=7.2"
pytest-postgresql = ">=5"
ruff = ">=0.0.254"
types-freezegun = ">=1.1.6"
types-PyYAML = ">=6.0.7"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = [
    { python = "<3.8", version = "<6.0" },
    { python = ">=3.8,<3.9", version = "<7.2" },
    { python = ">=3.9", version = ">=7.2" },
]
sphinx-rtd-theme = ">=1.1"
sphinx-copybutton = ">=0.5"
attrs = ">=22"

[tool.poetry.group.adapters]
optional = true

[tool.poetry.group.adapters.dependencies]
dbt-bigquery = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-postgres = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-redshift = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-snowflake = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]
dbt-spark = [
    { python = "<3.8", version = ">=1.4.0,<1.6.0", optional = true },
    { python = ">=3.11", version = ">=1.4.0,<1.8.0", optional = true },
]

[tool.poetry.extras]
airflow-providers = ["apache-airflow-providers-amazon", "apache-airflow-providers-ssh"]
adapters = ["dbt-bigquery", "dbt-redshift", "dbt-postgres", "dbt-snowflake", "dbt-spark"]
bigquery = ["dbt-bigquery"]
docs = ["Sphinx", "sphinx-rtd-theme", "sphinx-copybutton"]
git = ["apache-airflow-providers-ssh", "dulwich"]
postgres = ["dbt-postgres"]
redshift = ["dbt-redshift"]
s3 = ["apache-airflow-providers-amazon"]
snowflake = ["dbt-snowflake"]
spark = ["dbt-spark"]

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
source = ["airflow_dbt_python"]

[tool.coverage.paths]
source = [
    "airflow_dbt_python",
    "/home/runner/*/airflow-dbt-python/airflow_dbt_python"
]

[tool.mypy]
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = false
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
addopts = "--doctest-modules"
postgresql_user = "test"
postgresql_password = "test" # pragma: allowlist secret
postgresql_dbname = "test"
python_classes = "!TestStatus !TestTaskConfig"
filterwarnings = [
    # Warnings raised by dbt dependencies
    'ignore: write_gpickle is deprecated:DeprecationWarning',
    "ignore: 'soft_unicode' has been renamed to 'soft_str':DeprecationWarning"
]
markers = [
    "integration: mark test as an integration test"
]

[tool.ruff]
select = ["E", "D", "F", "I"]
ignore = ["D107"]
line-length = 88
target-version = "py311"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "airflow",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "webserver_config.py",
]

[tool.ruff.isort]
known-third-party = [
  "airflow",
  "dbt",
  "yaml",
]

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "E402",
    "F401",
]
"tests/*" = [
    "F401",
    "E402",
]
"docs/*" = ["E402"]

[tool.ruff.pydocstyle]
convention = "google"
