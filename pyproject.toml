[tool.poetry]
name = "airflow-dbt-python"
version = "0.11.0"
description = "A dbt operator and hook for Airflow"
authors = ["Tomás Farías Santana <tomas@tomasfarias.dev>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/tomasfarias/airflow-dbt-python"
classifiers = [
    "Development Status :: 4 - Beta",

    "Intended Audience :: Developers",

    "License :: OSI Approved :: MIT License",

    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.dependencies]
python = "^3.7"
apache-airflow = ">=1.10.12, < 3.0.0"
dbt-core = "^1.0"
# Flask is required by Airflow, but the dependency hasn't been updated to fix an issue
# with Flask-OpenID is breaking our build.
# See details: https://github.com/pallets-eco/flask-openid/pull/60
Flask-OpenID = "1.3.0"
Markdown = "3.3.4"

apache-airflow-providers-amazon = { version = "^2", optional = true }
dbt-postgres = { version = "^1.0", optional = true }
dbt-redshift = { version = "^1.0", optional = true }
dbt-snowflake = { version = "^1.0", optional = true }
dbt-bigquery = { version = "^1.0", optional = true }

# Documentation extras
Sphinx = { version = "4.2.0", optional = true }
sphinx-rtd-theme = { version = "1.0.0", optional = true }
sphinxcontrib-napoleon = { version = "0.7", optional = true }

[tool.poetry.dev-dependencies]
black = "^21.5b1"
mypy = "^0.902"
flake8 = "^3.9.2"
flake8-docstrings = "^1.6.0"
pytest = "^6.2.4"
pre-commit = "^2.12.1"
pytest-postgresql = "^3.1.1"
psycopg2-binary = "^2.8.6"
isort = "^5.9.2"
moto = "^2.2.2"

[tool.poetry.extras]
redshift = ["dbt-redshift"]
postgres = ["dbt-postgres"]
snowflake = ["dbt-snowflake"]
bigquery = ["dbt-bigquery"]
all = ["dbt-bigquery", "dbt-redshift", "dbt-postgres", "dbt-snowflake"]
amazon = ["apache-airflow-providers-amazon"]
docs = ["Sphinx", "sphinx-rtd-theme", "sphinxcontrib-napoleon"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
postgresql_user = "test"
postgresql_password = "test"
postgresql_dbname = "test"
filterwarnings = [
    # Warning raised by dbt dependency
    'ignore: write_gpickle is deprecated:DeprecationWarning',
]

[tool.mypy]
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
